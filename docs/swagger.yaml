definitions:
  device.CreateDeviceRequest:
    properties:
      brand:
        maxLength: 255
        type: string
      name:
        maxLength: 255
        type: string
      state:
        enum:
        - available
        - in_use
        - inactive
        type: string
    required:
    - brand
    - name
    - state
    type: object
  device.DTO:
    properties:
      brand:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      state:
        type: string
    type: object
  device.UpdateDeviceRequest:
    properties:
      brand:
        type: string
      name:
        type: string
      state:
        enum:
        - available
        - in_use
        - inactive
        type: string
    type: object
  err.Error:
    properties:
      error:
        type: string
    type: object
  err.Errors:
    properties:
      errors:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: API service for managing devices
  title: Device Manager API
  version: "1.0"
paths:
  /devices:
    get:
      description: Get a list of all devices in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/device.DTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: List all devices
      tags:
      - devices
    post:
      consumes:
      - application/json
      description: Create a new device in the system.
      parameters:
      - description: Create device request object
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/device.CreateDeviceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/device.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/err.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Create a new device
      tags:
      - devices
  /devices/{id}:
    delete:
      description: Delete a device by its ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/err.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/err.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Delete a device
      tags:
      - devices
    get:
      description: Get a single device by its ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/device.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/err.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Get device by ID
      tags:
      - devices
    patch:
      consumes:
      - application/json
      description: |-
        Update an existing device by its ID, only devices that are not in the
        state 'in_use' can be updated.
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated device request object
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/device.UpdateDeviceRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/err.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/err.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Update a device
      tags:
      - devices
  /devices/brand/{brand}:
    get:
      description: Get all devices from a specific brand
      parameters:
      - description: Device brand
        in: path
        name: brand
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/device.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/err.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Find devices by brand
      tags:
      - devices
  /devices/state/{state}:
    get:
      description: Get all devices with a specific state
      parameters:
      - description: Device state
        in: path
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/device.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/err.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/err.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/err.Error'
      summary: Find devices by state
      tags:
      - devices
  /health:
    get:
      description: Endpoint to perform a health check on the system
      responses:
        "200":
          description: OK
      summary: Health check
      tags:
      - Health
swagger: "2.0"
